name: Github CI - Development

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: "Set up Rust"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: "Get CPU cores count"
        run: echo "CORES=$(nproc)" >> $GITHUB_ENV

      - name: "Cache Cargo dependencies"
        uses: Swatinem/rust-cache@v2

      - name: "Format code"
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: "Build project with Cargo"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release -j ${{ env.CORES }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: "Set up QEMU for Docker Buildx"
        uses: docker/setup-qemu-action@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Get CPU cores count"
        run: echo "CORES=$(nproc)" >> $GITHUB_ENV

      - name: Calculate Docker image tags
        id: tags
        env:
          DOCKER_IMAGES: "ghcr.io/${{ github.repository }}"
        run: |
          case $GITHUB_REF in
            refs/tags/*)  VERSION=${GITHUB_REF#refs/tags/};;
            refs/heads/*) VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g');;
            refs/pull/*)  VERSION=pr-${{ github.event.number }};;
            *)            VERSION=sha-${GITHUB_SHA::8};;
          esac
          TAGS=()
          for image in $DOCKER_IMAGES; do
            TAGS+=("${image}:${VERSION}")
            if [[ "${{ github.event.repository.default_branch }}" == "$VERSION" ]]; then
              TAGS+=("${image}:latest")
            fi
          done
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::$(IFS=,; echo "${TAGS[*]}")
          echo ::set-output name=commit_hash::${GITHUB_SHA::8}
          echo ::set-output name=build_date::$(git show -s --format=%cI)

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Docker image"
        uses: docker/build-push-action@v3.1.1
        with:
          tags: ${{ steps.tags.outputs.tags }}
          push: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            CPU_CORES=${{ env.CORES }}
            VERSION=${{ steps.tags.outputs.version }}
            COMMIT_HASH=${{ steps.tags.outputs.commit_hash }}
            BUILD_DATE=${{ steps.tags.outputs.build_date }}
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
            org.opencontainers.image.created=${{ steps.tags.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
